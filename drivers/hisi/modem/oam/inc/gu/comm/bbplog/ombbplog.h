/*
 * Copyright (C) Huawei Technologies Co., Ltd. 2012-2015. All rights reserved.
 * foss@huawei.com
 *
 * If distributed as part of the Linux kernel, the following license terms
 * apply:
 *
 * * This program is free software; you can redistribute it and/or modify
 * * it under the terms of the GNU General Public License version 2 and 
 * * only version 2 as published by the Free Software Foundation.
 * *
 * * This program is distributed in the hope that it will be useful,
 * * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * * GNU General Public License for more details.
 * *
 * * You should have received a copy of the GNU General Public License
 * * along with this program; if not, write to the Free Software
 * * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA
 *
 * Otherwise, the following license terms apply:
 *
 * * Redistribution and use in source and binary forms, with or without
 * * modification, are permitted provided that the following conditions
 * * are met:
 * * 1) Redistributions of source code must retain the above copyright
 * *    notice, this list of conditions and the following disclaimer.
 * * 2) Redistributions in binary form must reproduce the above copyright
 * *    notice, this list of conditions and the following disclaimer in the
 * *    documentation and/or other materials provided with the distribution.
 * * 3) Neither the name of Huawei nor the names of its contributors may 
 * *    be used to endorse or promote products derived from this software 
 * *    without specific prior written permission.
 * 
 * * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 */

/******************************************************************************

                  ???????? (C), 2001-2013, ????????????????

 ******************************************************************************
  ?? ?? ??      : bbp_colltion.h
  ?? ?? ??      : ????
  ??    ??      : j00174725
  ????????      : 2012??11??06??
  ????????      :
  ????????      : ??????????BBP????????????
  ????????      :
  ????????      :
  1.??    ??    : 2012??11??06??
    ??    ??    : ?????? 00174725
    ????????    : ????????

******************************************************************************/
#ifndef _OM_BBP_LOG_H_
#define _OM_BBP_LOG_H_

/*****************************************************************************
  1 ??????????????
*****************************************************************************/
#include "vos.h"
#include "mdrv.h"

#ifdef __cplusplus
#if __cplusplus
extern "C"{
#endif
#endif

/*****************************************************************************
  2 ??????
*****************************************************************************/
#define OM_BBP_REG(reg)   (*(volatile VOS_UINT32 *)((VOS_UINT32)(reg)))

#define OM_BBP_REG_SETBITS(reg, pos, bits, val) (OM_BBP_REG(reg) = (OM_BBP_REG(reg) \
                                        & (~((((VOS_UINT32)1 << (bits)) - 1) << (pos)))) \
                                        | ((VOS_UINT32)((val) & (((VOS_UINT32)1 << (bits)) - 1)) << (pos)))

#define OM_BBP_WRITE_REG(reg,value)                 (OM_BBP_REG(reg) = (value))

#define OM_BBP_READ_REG(value,reg)                  ((value) = OM_BBP_REG(reg))

/* BBP???????????????????????????????? */
#define BBP_DBG_NODE_NUM                            (4)

#define OM_BBP_BITN(n)                              (0x1 << n)

/* ????BBP??????????SOCP???????? */
#define BBP_DBG_CODER_SRC_NUM                       (2)

/* ?????????????????????? 4Kbyte */
#define BBP_DBG_NODE_SIZE                           (2 * 1024)

/* ????SOCP???????????????????? 8K  */
#define BBP_DBG_CODER_SRC_SIZE                      (BBP_DBG_NODE_NUM * BBP_DBG_NODE_SIZE)

/* BBP???????????????????????????? 16K*/
#define BBP_DBG_TOTAL_MEM_LENTH                     (BBP_DBG_CODER_SRC_SIZE * BBP_DBG_CODER_SRC_NUM)

/* BBP ???????????? 30.75 * 1024 KB:????????????????????30.72MB,????????32KB???????? */
#define BBP_DUMP_MIN_LEN                            (31488)

/* BBP ???????????? 2G */
#define BBP_DUMP_MAX_LEN                            (2 * 1024 * 1024)

/* BBP ??????????????32KB???????? */
#define BBP_DUMP_UNIT_LEN                           (32)

/* BBP???????????????????????? */
#define BBP_DBG_BACK_REG_NUM                        (20)

#define BBP_DUMP_EDMA_INT                           (BALONG_DMA_INT_DONE \
                                                    | BALONG_DMA_INT_TRANSFER_ERR \
                                                    | BALONG_DMA_INT_CONFIG_ERR)

#define BBP_DBG_EDMA_INT                            (BALONG_DMA_INT_DONE \
                                                    | BALONG_DMA_INT_TRANSFER_ERR \
                                                    | BALONG_DMA_INT_CONFIG_ERR \
                                                    | BALONG_DMA_INT_LLT_DONE \
                                                    | BALONG_DMA_INT_READ_ERR)

#define MAX_BBP_OFFSET_ADDR                         (0xFFFFFF)

#define BBP_DBG_MAGIC_SIGN                          (0x48495349)

#define BBP_DBG_PACKAGE_LENTH                       (2040)

#define BBP_DBG_ERR_PACKAGE_SIGN                    (0x5555AAAA)

#define OM_BBP_DBG_START                            (0x5555aaaa)   /* ???? */
#define OM_BBP_DBG_STOP                             (0xaaaa5555)   /* ???? */

#define WAITING_ACPU_CNF_TIMEOUT_LEN                (5000)
/* CCPU??ACPU??????????????,?????????? */
#define BBP_QUERY_DUMP_INFO_REQ                     (0xFA01)
#define BBP_QUERY_DUMP_INFO_CNF                     (0xFA02)


/* PC??????BBP???????? */
#define APP_OM_BBP_DUMP_SET_REQ                   0x8103
#define OM_APP_BBP_DUMP_SET_CNF                   0x8104

/* PC??????BBP ???????????? */
#define APP_OM_BBP_DBG_SET_REQ                    0x8105
#define OM_APP_BBP_DBG_SET_CNF                    0x8106

/* ??BBP ??????????????????????????????????????CCPU OM ???????? */
#define APP_OM_BBP_DUMP_END_REQ                   0x8107

/* ?????????????? */
#define OM_APP_BBP_DUMP_END_CNF                   0x8110

/* BBP????????EDMA??????????????????????????????CCPU OM */
#define APP_OM_BBP_EDMA_ERR_REQ                   0x8113

/* ????????EDMA ???? */
#define OM_APP_BBP_EDMA_ERR_CNF                   0x8114

/* BPP dump???????? */
#define APP_OM_BBP_DUMP_DUMP_REQ                  0x8115
#define OM_APP_BBP_DUMP_DUMP_CNF                  0x8116

/* ????????C?????????? */
#define OM_APP_CCORE_RESET_CNF                    0x8118

/*****************************************************************************
  3 ????????
*****************************************************************************/

/*****************************************************************************
  ??????    : OM_TOOL_CPUID_ENUM
  ????????  : OM??TOOL CPU ID????
1.??    ??  : 2012??08??08??
  ??    ??  : J00168360
  ????????  : V9R1 MSP??????????????????????????????
*****************************************************************************/
enum OM_TOOL_CPUID_ENUM
{
     OM_TOOL_RSV_ID,
     OM_TOOL_ACPU_ID,
     OM_TOOL_CCPU_ID,
     OM_TOOL_LDSP_ID,
     OM_TOOL_LBBP_ID,
     OM_TOOL_HIFI_ID,
     OM_TOOL_GUDSP_ID,
     OM_TOOL_TDSDSP_ID,
     OM_TOOL_TDSBBP_ID,
     OM_TOOL_MCU_ID,
     OM_TOOL_GPU_ID,
     OM_TOOL_GUBBP_ID,
     OM_TOOL_CPUID_BUTT
};
typedef VOS_UINT8 OM_TOOL_CPUID_ENUM_UINT8;

/*****************************************************************************
??????    : BBP_DUMP_FIFO_WATERMARKER_ENUM
????????  : BBP????????????

  1.??    ??   : 2012??11??06??
    ??    ??   : j00174725
    ????????   : BBP????????????
*****************************************************************************/
typedef enum
{
    BBP_DUMP_WATERMARKER0 = 0,      /* 0??????????????2 */
    BBP_DUMP_WATERMARKER1,          /* 1??????????????4 */
    BBP_DUMP_WATERMARKER2,          /* 2??????????????8 */
    BBP_DUMP_WATERMARKER3,          /* 3??????????????16 */
    BBP_DUMP_WATERMARKER4,          /* 4??????????????32 */
    BBP_DUMP_WATERMARKER5,          /* 5??????????????64 */
    BBP_DUMP_WATERMARKER6,          /* 6??????????????128 */
    BBP_DUMP_WATERMARKER_BUTT
}BBP_DUMP_FIFO_WATERMARKER_ENUM;

typedef VOS_UINT32 BBP_DUMP_FIFO_WATERMARKER_ENUM_U32;

/*****************************************************************************
??????    : OM_BBP_STATUS_ENUM
????????  : BBP DBG??DUMP????

  1.??    ??   : 2012??11??06??
    ??    ??   : j00174725
    ????????   : BBP????????????
*****************************************************************************/
typedef enum
{
    OM_BBP_START = 0,   /* ???? */
    OM_BBP_STOP,        /* ???? */
    OM_BBP_BUTT
}OM_BBP_STATUS_ENUM;

typedef VOS_UINT32 OM_BBP_STATUS_ENUM_U32;

/*****************************************************************************
??????    : OM_BBP_DUMP_MODE_ENUM
????????  : BBP DUMP????????

  1.??    ??   : 2012??11??06??
    ??    ??   : j00174725
    ????????   : BBP????????????
*****************************************************************************/
typedef enum
{
    OM_BBP_DUMP_MODE_W = 0,   /* W?? */
    OM_BBP_DUMP_MODE_G1,      /* G1?? */
    OM_BBP_DUMP_MODE_Rev,
    OM_BBP_DUMP_MODE_G2,      /* G2?? */
    OM_BBP_DUMP_MODE_BUTT
}OM_BBP_DUMP_MODE_ENUM;

typedef VOS_UINT32 OM_BBP_DUMP_MODE_ENUM_U32;

/*****************************************************************************
??????    : BBP_DBG_IF_SEL_ENUM
????????  : BBP DBG ????????????

  1.??    ??   : 2012??11??06??
    ??    ??   : j00174725
    ????????   : BBP????????????
*****************************************************************************/
typedef enum
{
    BBP_IF_SEL_LOCALBUS = 0,    /* 0??????????LocalBus????????????BBP???????? */
    BBP_IF_SEL_WBBP_IMI,        /* 1??????????WBBP IMI??????????????WBBP???????? */
    BBP_IF_SEL_GBBP_IMI,        /* 2??????????GBBP IMI??????????????GBBP???????? */
    BBP_IF_SEL_REV,             /* 3?????????? */
    BBP_IF_SEL_BUTT
}BBP_DBG_IF_SEL_ENUM;

typedef VOS_UINT32 BBP_DBG_IF_SEL_ENUM_U32;

/*****************************************************************************
??????    : BBP_DBG_CLK_IN_SEL_EN_ENUM
????????  : BBP DBG????????????

  1.??    ??   : 2012??11??06??
    ??    ??   : j00174725
    ????????   : BBP????????????
*****************************************************************************/
typedef enum
{
    BBP_DBG_CLK_IN_SEL0 = 0,    /* 0?????????????????????? */
    BBP_DBG_CLK_IN_SEL1,        /* 1?????????????????????? */
    BBP_DBG_CLK_IN_SEL2,        /* 2?????????????????????? */
    BBP_DBG_CLK_IN_SEL_BUTT
}BBP_DBG_CLK_IN_SEL_EN_ENUM;

typedef VOS_UINT32 BBP_DBG_CLK_IN_SEL_ENUM_U32;

/*****************************************************************************
??????    : BBP_DBG_FIFO_WATERMARKER_ENUM
????????  : BBP DBG????????

  1.??    ??   : 2012??11??06??
    ??    ??   : j00174725
    ????????   : BBP????????????
*****************************************************************************/
typedef enum
{
    BBP_DBG_WATERMARKER0 = 0,   /* 0??????????????2 */
    BBP_DBG_WATERMARKER1,       /* 1??????????????4 */
    BBP_DBG_WATERMARKER2,       /* 2??????????????8 */
    BBP_DBG_WATERMARKER3,       /* 3??????????????16 */
    BBP_DBG_WATERMARKER4,       /* 4??????????????32 */
    BBP_DBG_WATERMARKER5,       /* 5??????????????64 */
    BBP_DBG_WATERMARKER_BUTT
}BBP_DBG_FIFO_WATERMARKER_ENUM;

typedef VOS_UINT32 BBP_DBG_FIFO_WATERMARKER_ENUM_U32;

/*****************************************************************************
??????    : OM_APP_BBP_DUMP_CHOOSE_ENUM
????????  : BBP DUMP ????????????

  1.??    ??   : 2012??11??06??
    ??    ??   : j00174725
    ????????   : BBP????????????
*****************************************************************************/
typedef enum
{
    BBP_DUMP_CHOOSE_YES = 0,    /* ???????????????? */
    BBP_DUMP_CHOOSE_NO,         /* ???????????? */
    BBP_DUMP_CHOOSE_BUTT
}OM_APP_BBP_DUMP_CHOOSE_ENUM;

typedef VOS_UINT32 OM_APP_BBP_DUMP_CHOOSE_ENUM_U32;

/*****************************************************************************
??????    : OM_APP_BBP_DBG_ERRCODE_ENUM
????????  : BBP ??????????PC????????????

  1.??    ??   : 2012??11??06??
    ??    ??   : j00174725
    ????????   : BBP????????????
*****************************************************************************/
typedef enum
{
    BBP_DBG_OK = 0,             /* ???? */
    BBP_DBG_ALLOC_ERR,          /* ????????buffer???? */
    BBP_DBG_ALLOC_MSG_ERR,      /* ???????????????? */
    BBP_DBG_INIT_SOCP_ERR,      /* ??????SOCP???? */
    BBP_DBG_START_SOCP_ERR,     /* ????SOCP???????? */
    BBP_DBG_ENABLE_EDMA_ERR,    /* ????EDMA???????? */
    BBP_DBG_STOP_EDMA_ERR,      /* ????EDMA???? */
    BBP_DBG_IF_SEL_ERR,         /* ???????????????? */
    BBP_DBG_CLK_IN_SEL_ERR,     /* ???????????????? */
    BBP_DBG_INIT_EDMA_ERR,      /* ??????EDMA???? */
    BBP_DBG_CONFIG_EDMA_ERR,    /* ????EDMA???? */
    BBP_DBG_ALLOC_CYC_ERR,      /* ????????buff???? */
    BBP_DBG_GET_CONFIGADD_ERR,  /* ????EDMA???????????? */
    BBP_DBG_CREATE_SEM_ERR,     /* ?????????????? */
    BBP_DBG_ADDR_ERR,           /* ?????????????? */
    BBP_DBG_MODE_ERR,           /* ???????????? */
    BBP_DBG_BUTT
}OM_APP_BBP_DBG_ERRCODE_ENUM;

typedef VOS_UINT32 OM_APP_BBP_DBG_ERRCODE_ENUM_U32;

/*****************************************************************************
??????    : OM_APP_BBP_DUMP_ERRCODE_ENUM
????????  : BBP ??????PC????????????

  1.??    ??   : 2012??11??06??
    ??    ??   : j00174725
    ????????   : BBP????????????
*****************************************************************************/
typedef enum
{
    BBP_DUMP_OK = 0,              /* ???????? */
    BBP_DUMP_MEM_SMALL,           /* ???????????????? */
    BBP_DUMP_MEM_BIG,             /* ????????????????*/
    BBP_DUMP_MEM_NOT_32KB,        /* ??32kB???????? */
    BBP_DUMP_ALLOC_MEM_ERR,       /* ???????????????? */
    BBP_DUMP_START_EDMA_ERR,      /* ????EDMA???? */
    BBP_DUMP_ACORE_MSG_NULL,      /* A????????MSG???? */
    BBP_DUMP_END,                 /* ???????? */
    BBP_DUMP_READ_NV_ERR,         /* ??NV???? */
    BBP_DUMP_DISABLE,             /* NV??????BBP????*/
    BBP_DUMP_STOP_EDMA_ERR,       /* ????EDMA???? */
    BBP_DUMP_MODE_ERR,            /* ???????? */
    BBP_DUMP_WAITING_CNF_TIMEOUT, /* ???????????? */
    BBP_DUMP_RCV_MSG_NOT_MATCH,   /* ?????????????? */
    BBP_DUMP_BUTT
}OM_APP_BBP_DUMP_ERRCODE_ENUM;

typedef VOS_UINT32 OM_APP_BBP_DUMP_ERRCODE_ENUM_U32;

/*****************************************************************************
??????    : OM_APP_BBP_EDMA_ERR_ENUM
????????  : ????EDMA??????????????????????????????????????????

  1.??    ??   : 2012??11??06??
    ??    ??   : j00174725
    ????????   : BBP????????????
*****************************************************************************/
typedef enum
{
    OM_BBP_DUMP_EDMA_ERR = 0, /* ????EDMA???? */
    OM_BBP_DBG_EDMA_ERR,      /* ????????EDMA???? */
    OM_BBP_EDMA_ERR_BUTT
}OM_APP_BBP_EDMA_ERR_ENUM;

typedef VOS_UINT16 OM_APP_BBP_EDMA_ERR_ENUM_U16;

/*****************************************************************************
??????    : OM_BBP_DUMP_ENABLE_ENUM
????????  : NV ??????????????????

  1.??    ??   : 2012??11??06??
    ??    ??   : j00174725
    ????????   : BBP????????????
*****************************************************************************/
typedef enum
{
    OM_BBP_DUMP_DISABLE = 0, /* ???????? */
    OM_BBP_DUMP_ENABLE,      /* ???????? */
    OM_BBP_DUMP_BUTT
}OM_BBP_DUMP_ENABLE_ENUM;

typedef VOS_UINT16 OM_BBP_DUMP_ENABLE_ENUM_U16;

/*****************************************************************************
  4 ????????????
*****************************************************************************/


/*****************************************************************************
  5 ??????????
*****************************************************************************/

/*****************************************************************************
  6 ????????
*****************************************************************************/


/*****************************************************************************
  7 STRUCT????
*****************************************************************************/
/*****************************************************************************
??????    : BBP_DBG_SOCP_INFO_STRU
????????  : BBP DBG SOCP????????

  1.??    ??   : 2012??11??06??
    ??    ??   : j00174725
    ????????   : BBP????????
*****************************************************************************/
typedef struct
{
    VOS_UINT32  ulWriteDoneOk;      /* ???????????????? */
    VOS_UINT32  ulWriteDoneErr;     /* ???????????????? */
    VOS_UINT32  ulGetWriteBuffErr;  /* ??????????buffer?????????? */
    VOS_UINT32  ulBuffNotEnough;    /* ?????????????????? */
    VOS_UINT32  ulWriteBufSize;     /* ???????????????? */
}BBP_DBG_SOCP_INFO_STRU;

/*****************************************************************************
??????    : BBP_DBG_ERR_INFO_STRU
????????  : BBP DBG ????????

  1.??    ??   : 2012??11??06??
    ??    ??   : j00174725
    ????????   : BBP????????
*****************************************************************************/
typedef struct
{
    VOS_UINT16                  usAllocErr;                                 /* ???????????????? */
    VOS_UINT16                  usInitSocpErr;                              /* ??????????SOCP???? */
    VOS_UINT16                  usStartSocpErr;                             /* ????????SOCP???? */
    VOS_UINT16                  usInitEdmaErr;                              /* ????EDMA?????????? */
    VOS_UINT16                  usConfigEdmaErr;                            /* ????EDMA???????? */
    VOS_UINT16                  usEdmaErrCode;                              /* ????EDMA???????????????? */
    VOS_UINT16                  usAllocCycErr;                              /* ????????EDMA???????????????? */
    VOS_UINT16                  usGetConAddrErr;                            /* ????????EDMA????????????*/
    VOS_UINT16                  usStartEdmaErrNum;                          /* ????????EDMA?????????? */
    VOS_UINT16                  usStopEdmaErrNum;                           /* ????EDMA???? */
    VOS_UINT16                  usCreateSemErr;                             /* ?????????????? */
    VOS_UINT16                  usRev;
    BBP_DBG_SOCP_INFO_STRU      astBbpDbgSocpInfo[BBP_DBG_CODER_SRC_NUM];   /* ????SOCP?????????? */
}BBP_DBG_ERR_INFO_STRU;

/*****************************************************************************
??????    : BBP_DBG_INFO_STRU
????????  : BBP DBG ????????

  1.??    ??   : 2012??11??06??
    ??    ??   : j00174725
    ????????   : BBP????????
*****************************************************************************/
typedef struct
{
    VOS_INT                             lBbpEdmaChanID;                         /* ????????????EDMA?????? */
    VOS_UINT32                          ulBbpDbgStatus;                         /* ??????????????????*/
    VOS_UINT32                          ulBbpErrCode;                           /* ????BBP???????????????????? */
    VOS_UINT32                          ulBbpSelfTaskNum;                       /* ???????????????????????? */
    VOS_UINT32                          ulBbpEdmaCallBackNum;                   /* ????BBP????????EDMA ???????????? */
    VOS_UINT32                          ulPhyAddr;                              /* ?????????????????????? */
    VOS_UINT32                          ulIndexValue;                           /* ?????? */
    VOS_UINT32                          ulLastAddr;                             /* EDMA???????????????????? */
    VOS_UINT32                          ulFlowNum;                              /* BBP?????????? */
}BBP_DBG_INFO_STRU;

/*****************************************************************************
??????    : BBP_DUMP_ERR_INFO_STRU
????????  : BBP DUMP ????????

  1.??    ??   : 2012??11??06??
    ??    ??   : j00174725
    ????????   : BBP????????
*****************************************************************************/
typedef struct
{
    VOS_UINT16  usInitEdmaErr;  /* ??????EDMA???? */
    VOS_UINT16  usConfigEdmaErr;/* ????EDMA???? */
    VOS_UINT16  usStartEdmaErr; /* ????EDMA???? */
    VOS_UINT16  usEdmaErrCode;  /* ???????????? */
    VOS_UINT16  usAllocMsgErr;  /* ???????????????? */
    VOS_UINT16  usCloseEdmaErr; /* ????EDMA????*/
    VOS_UINT16  usStopEdmaErr;  /* ????EDMA???? */
    VOS_UINT16  usRev;
}BBP_DUMP_ERR_INFO_STRU;


/*****************************************************************************
??????    : BBP_DUMP_CHOOSE_STRU
????????  : BBP DUMP ????????????

  1.??    ??   : 2012??11??06??
    ??    ??   : j00174725
    ????????   : BBP????????
*****************************************************************************/
typedef struct
{
    VOS_UINT32  ulChooseRelt;

}BBP_DUMP_CHOOSE_STRU;

/*****************************************************************************
??????    : OM_APP_BBP_DUMP_EDMA_STRU
????????  : BBP DUMP ????PC????????EDMA????????

  1.??    ??   : 2012??11??06??
    ??    ??   : j00174725
    ????????   : BBP????????
*****************************************************************************/
typedef struct
{
    OM_APP_BBP_DUMP_ERRCODE_ENUM_U32    enErr;      /* ??????????????????????????????????OK,?????????????????? */
    VOS_UINT32                          ulPhyAddr;
}OM_APP_BBP_DUMP_EDMA_STRU;

/*****************************************************************************
??????    : APP_OM_BBP_DUMP_SET_STRU
????????  : BBP DUMP PC??????W??????????

  1.??    ??   : 2012??11??06??
    ??    ??   : j00174725
    ????????   : BBP????????
*****************************************************************************/
typedef struct
{
    OM_BBP_DUMP_MODE_ENUM_U32               enMode;             /* 0x5E820334????????G??????W?? */
    VOS_UINT32                              ulDataLen;          /* 0x014c ?????????????? ??0??????????,PC??????????KByte?????? */

    /* W???????? start */
    BBP_DUMP_FIFO_WATERMARKER_ENUM_U32      enFifoWaterW;       /* 0x0154 ???????????? */
    VOS_UINT32                              ulStartTimeW;       /* 0x0150 ???????????? */
    VOS_UINT32                              ulDataModelSelW;    /* 0x12dc DMA???????????????? */
    VOS_UINT32                              ulWtDbgEnW;         /* 0x96000 DBG????????????????*/
    /* W???????? end */

    /* G???????? start */
    VOS_UINT32                              ulStartLowTimeG;    /* 0xf00c ???????????? */
    VOS_UINT32                              ulStartHiTimeG;     /* 0xf010 ???????????? */
    VOS_UINT32                              ulGenConfig;        /* 0xF004 G?????????? */
    /* G???????? end */
}APP_OM_BBP_DUMP_SET_STRU;

/*****************************************************************************
??????    : BBP_DUMP_GET_FIX_DDR_ADDR
????????  : ????????????????????????????????

  1.??    ??   : 2014??10??08??
    ??    ??   : d00212987
    ????????   : BBP????????
*****************************************************************************/
typedef struct
{
    VOS_UINT32                          ulPhyAddr;    /* ????BBP??????????EDMA?????? */
    VOS_UINT32                          ulPhySize;    /* ???????????? */
}BBP_DUMP_GET_FIX_DDR_ADDR;

/*****************************************************************************
??????    : BBP_DUMP_MSG_STRU
????????  : ????????????????????????????????

  1.??    ??   : 2014??10??08??
    ??    ??   : d00212987
    ????????   : BBP????????
*****************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    VOS_UINT16                          usPrimId;
    VOS_UINT16                          ausRsv[3];
    BBP_DUMP_GET_FIX_DDR_ADDR           stDumpDdrInfo;
}BBP_DUMP_MSG_STRU;

/*****************************************************************************
??????    : APP_OM_BBP_DBG_SET_W_STRU
????????  : BBP ???????? PC??????????????

  1.??    ??   : 2012??11??06??
    ??    ??   : j00174725
    ????????   : BBP????????
*****************************************************************************/
typedef struct
{
    OM_BBP_DUMP_MODE_ENUM_U32           enMode;             /* 0x5E820334????????G??????W?? */
    OM_BBP_STATUS_ENUM_U32              enStatus;           /* ????????????BBP DBG???? */
    BBP_DBG_IF_SEL_ENUM_U32             enBBPIfSel;         /* 0x008 ????BBP????????????*/
    BBP_DBG_CLK_IN_SEL_ENUM_U32         enClkInSel;         /* 0x010 DBG???????????? */
    VOS_UINT32                          ulTimeSel;          /* 0x01c ?????????????????????? */
    VOS_UINT32                          ulMaskAddrStart0;   /* 0x020 ?????????????????????? */
    VOS_UINT32                          ulMaskAddrEnd0;     /* 0x024 ?????????????????????? */
    VOS_UINT32                          ulMaskAddrStart1;   /* 0x028 ?????????????????????? */
    VOS_UINT32                          ulMaskAddrEnd1;     /* 0x02c ?????????????????????? */
    VOS_UINT32                          ulMaskAddrStart2;   /* 0x030 ?????????????????????? */
    VOS_UINT32                          ulMaskAddrEnd2;     /* 0x034 ?????????????????????? */
    VOS_UINT32                          ulMaskAddrStart3;   /* 0x038 ?????????????????????? */
    VOS_UINT32                          ulMaskAddrEnd3;     /* 0x03c ?????????????????????? */
    BBP_DBG_FIFO_WATERMARKER_ENUM_U32   enFifoWater;        /* 0x040 DBG FIFO???????? */
    VOS_UINT32                          ulDbgSwitch;        /* 0x044 DBG???????????? ??????????1????2?????????????? 0x008??0x010*/
}APP_OM_BBP_DBG_SET_W_STRU;

/*****************************************************************************
??????    : BBP_DUMP_INFO_STRU
????????  : ????BBP????????

  1.??    ??   : 2012??11??06??
    ??    ??   : j00174725
    ????????   : BBP????????
*****************************************************************************/
typedef struct
{
    VOS_INT                             lEdmaChanID;    /* ????BBP??????????EDMA?????? */
    VOS_UINT16                          usDUMPStatus;   /* ???????????? */
    VOS_UINT16                          usDUMPDone;     /* EDMA???????????? */
    VOS_UINT16                          usDUMPMode;     /* ?????????????????? */
    VOS_UINT16                          usRev;
    VOS_UINT32                          ulPhyAddr;      /* ????DRV??????DUMP???????? */
    VOS_UINT32                          ulPhySize;      /* ????DRV??????DUMP???????? */
}BBP_DUMP_INFO_STRU;

/*****************************************************************************
??????    : BBP_EDMA_ERR_STRU
????????  : ????????ACPU OM EDMA????????????

  1.??    ??   : 2012??11??06??
    ??    ??   : j00174725
    ????????   : BBP????????
*****************************************************************************/
typedef struct
{
    OM_APP_BBP_EDMA_ERR_ENUM_U16        enEdmaErr;      /* ???????????????????????????????????????????? */
    VOS_UINT16                          usRsv;
}BBP_EDMA_ERR_STRU;

/*****************************************************************************
??????    : APP_BBP_DUMP_REQ_MSG_STRU
????????  : DIAG??????????PC??BBP DUMP??????????????????

  1.??    ??   : 2015??06??17??
    ??    ??   : H00300778
    ????????   : BBP????????
*****************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    VOS_UINT32                          ulMsgName;

    /* PC????????????????????????CNF???????????? */
    VOS_UINT16                          usOriginalId;
    VOS_UINT16                          usTerminalId;
    VOS_UINT32                          ulTimeStamp;
    VOS_UINT32                          ulSN;

    VOS_UINT8                           aucValue[4];
}APP_BBP_DUMP_REQ_MSG_STRU;

/*****************************************************************************
??????    : APP_BBP_DUMP_CNF_MSG_STRU
????????  : ??DIAG??????????PC??????????????????????????PC??UE????????????????
            BBP DUMP????????????

  1.??    ??   : 2015??06??17??
    ??    ??   : H00300778
    ????????   : BBP????????
*****************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    VOS_UINT32                          ulMsgName;

    /* PC????????????????????????CNF???????????? */
    VOS_UINT16                          usOriginalId;
    VOS_UINT16                          usTerminalId;
    VOS_UINT32                          ulTimeStamp;
    VOS_UINT32                          ulSN;

    VOS_UINT32                          ulRslt;
}APP_BBP_DUMP_CNF_MSG_STRU;

/*****************************************************************************
  8 UNION????
*****************************************************************************/


/*****************************************************************************
  9 OTHERS????
*****************************************************************************/


/*****************************************************************************
  10 ????????
*****************************************************************************/
extern VOS_VOID Om_CcpuBbpLogConfigCnf(
    APP_BBP_DUMP_REQ_MSG_STRU              *pstAppToOmMsg,
    VOS_UINT32                              ulMsgName,
    VOS_UINT32                              ulRslt);

extern VOS_VOID Om_CcpuBbpLogConfigMsgProc(MsgBlock *pRcvMsg);

extern VOS_UINT32 Om_ConfigBbpDump(
    APP_OM_BBP_DUMP_SET_STRU           *pstAppToOmMsg);

extern VOS_UINT32 Om_EndBbpDump(VOS_VOID);

extern VOS_UINT32 Om_ConfigBbpDbg(
    APP_OM_BBP_DBG_SET_W_STRU          *pstAppToOmMsg);

extern VOS_UINT32 Om_SendEdmaErrToPc(
    BBP_EDMA_ERR_STRU                  *pstEdmaErr,
    VOS_UINT16                          usReturnPrimId);

extern VOS_UINT32 Om_SendQueryDumpMsg(VOS_VOID);

extern VOS_VOID Om_BbpDumpAddrQueryMsgProc(MsgBlock *pMsg);

#ifdef __cplusplus
#if __cplusplus
}
#endif
#endif

#endif


